+----------------+     +--------------+      +----------------+    +------------------+
|    EventBus    |     |    Event     |      |     Shape      |    |    ShapeManager  |
+----------------+     +--------------+      +----------------+    +------------------+
| - subscribers: |     |              |      |                |    |   - shapes:      |
|    vector<function<void(const Event&)>> | |                |    |     vector<unique_ptr<Shape>> |
|                |     |              |      |                |    |                  |
| + getInstance(): EventBus& | |                |    |                  |
| + subscribe(callback: function<void(const Event&)>) | |                |    |   + addShape(shape: unique_ptr<Shape>): void |
| + publish(event: const Event&): void | |                |    |   + startDrawing(): void |
|                |     |              |      |                |    |   + startUpdating(): void |
+----------------+     +--------------+      +----------------+    +------------------+
                                   |                                  |        |
                                   |                                  |        |
+---------------------+            |                                  |        |
|     DrawEvent      |            |                                  |        |
+---------------------+            |                                  |        |
|                     |            |                                  |        |
+---------------------+            |                                  |        |
                                   |                                  |        |
+---------------------+            |                                  |        |
|    UpdateEvent     |            |                                  |        |
+---------------------+            |                                  |        |
|                     |            |                                  |        |
+---------------------+            |                                  |        |
                                   |                                  |        |
+---------------------+            |                                  |        |
|       Circle        |            |                                  |        |
+---------------------+            |                                  |        |
| - radius: double    |            |                                  |        |
+---------------------+            |                                  |        |
| + Circle(radius: double) |       |                                  |        |
| + draw(): void      |------------+----------------------------------+        |
| + update(): void    |--------------------------------------------------------+
|                     |
+---------------------+

+-----------------------+
|      Rectangle        |
+-----------------------+
| - width: double       |
| - height: double      |
+-----------------------+
| + Rectangle(width: double, height: double) |
| + draw(): void        |
| + update(): void      |
|                       |
+-----------------------+
- 이벤트 버스
소프트웨어 컴포넌트 간 통신을 위한 디자인 패턴 중 하나이다.
소프트웨어의 다양한 구성 요소 간 통신을 관리하기 위한 중앙 집중식 메커니즘이다.
특히 이벤트 기반 아키텍처에서 사용되면, 이벤트가 발생하면 다른 구성요소가 해당 이벤트
를 처리할 수 있다.
1. 이벤트
이벤트 버스를 통해 전달되는 메시지 또는 신호이다. 
사용자가 클릭했다/데이터가 업데이트되었다.라는 이벤트 등이 있다.

