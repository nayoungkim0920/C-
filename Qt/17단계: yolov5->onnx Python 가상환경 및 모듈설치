<수정사항>
1. 가상환경만들기, 가상환경실행, 종료, 삭제
명령 프롬프트(CMD) 관리자권한실행
C:\>python --version
Python 3.12.3
C:\>python -m venv myenv
C:\>myenv\Scripts\activate
(myenv) C:\>
(myenv) C:\>pip install dill
Collecting dill
  Using cached dill-0.3.8-py3-none-any.whl.metadata (10 kB)
Using cached dill-0.3.8-py3-none-any.whl (116 kB)
Installing collected packages: dill
Successfully installed dill-0.3.8

[notice] A new release of pip is available: 24.0 -> 24.2
[notice] To update, run: python.exe -m pip install --upgrade pip

(myenv) C:\>python.exe -m pip install --upgrade pip
Requirement already satisfied: pip in c:\myenv\lib\site-packages (24.0)
Collecting pip
  Using cached pip-24.2-py3-none-any.whl.metadata (3.6 kB)
Using cached pip-24.2-py3-none-any.whl (1.8 MB)
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 24.0
    Uninstalling pip-24.0:
      Successfully uninstalled pip-24.0
Successfully installed pip-24.2

(myenv) C:\>deactivate
C:\>rmdir /s /q myenv
C:\>myenv\Scripts\activate
C:\>myenv\Scripts\activate
지정된 경로를 찾을 수 없습니다.

2. yolov5->onnx export 필요한 모듈설치
C:\>python -m venv myenv
C:\>myenv\Scripts\activate
(myenv) C:\>pip install dill
Successfully installed dill-0.3.8
(myenv) C:\>pip install torch
Successfully installed MarkupSafe-2.1.5 filelock-3.15.4 fsspec-2024.6.1 jinja2-3.1.4 mpmath-1.3.0 networkx-3.3 setuptools-72.1.0 sympy-1.13.1 torch-2.4.0 typing-extensions-4.12.2
(myenv) C:\>pip install onnx 
Successfully installed numpy-2.0.1 onnx-1.16.2 protobuf-5.27.3
(myenv) C:\>pip install onnxruntime
Successfully installed coloredlogs-15.0.1 flatbuffers-24.3.25 humanfriendly-10.0 numpy-1.26.4 onnxruntime-1.18.1 packaging-24.1 pyreadline3-3.4.1
(myenv) C:\>pip install cv2 
ERROR: Could not find a version that satisfies the requirement cv2 (from versions: none)
ERROR: No matching distribution found for cv2
(myenv) C:\>pip install opencv-python
Successfully installed opencv-python-4.10.0.84
(myenv) C:\>pip install opencv-python-headless
Successfully installed opencv-python-headless-4.10.0.84
(myenv) C:\>pip install pandas
#tf-slim 패키지가 필요하다는 경고
ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.
slim 0.1 requires tf-slim>=1.1, which is not installed. 
Successfully installed pandas-2.2.2 python-dateutil-2.9.0.post0 pytz-2024.1 six-1.16.0 tzdata-2024.1
(myenv) C:\>pip install tf-slim
Successfully installed absl-py-2.1.0 tf-slim-1.1.0
(myenv) C:\>pip install requests
Successfully installed certifi-2024.7.4 charset-normalizer-3.3.2 idna-3.7 requests-2.32.3 urllib3-2.2.2
(myenv) C:\>pip install PIL
(Python Imaging Library)->직접설치불가
ERROR: Could not find a version that satisfies the requirement PIL (from versions: none)
ERROR: No matching distribution found for PIL
(myenv) C:\>pip install Pillow
Successfully installed Pillow-10.4.0

#C:\myLab\Project1\Project1\python\myTorchScript.py
#C:\yolov5\models\common.py
os.system("pip install -U ultralytics")
Successfully installed colorama-0.4.6 contourpy-1.2.1 cycler-0.12.1 fonttools-4.53.1 kiwisolver-1.4.5 matplotlib-3.9.1.post1 psutil-6.0.0 py-cpuinfo-9.0.0 pyparsing-3.1.2 pyyaml-6.0.2 scipy-1.14.0 seaborn-0.13.2 torchvision-0.19.0 tqdm-4.66.5 ultralytics-8.2.74 ultralytics-thop-2.0.0

(myenv) C:\>pip install utils
Successfully installed utils-1.0.2

#C:\yolov5\models\common.py
Exception has occurred: ImportError
cannot import name 'TryExcept' from 'utils' (c:\myenv\Lib\site-packages\utils\__init__.py)
  File "C:\yolov5\models\common.py", line 38, in <module>
    from utils import TryExcept
ImportError: cannot import name 'TryExcept' from 'utils' (c:\myenv\Lib\site-packages\utils\__init__.py)

(myenv) C:\>pip uninstall utils

#C:\yolov5\models\common.py
(line 27 추가)
import sys
import os
# 프로젝트 루트 디렉토리를 Python 경로에 추가
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# C:\myLab\Project1\Project1\python\myTorchScript.py 실행
import sys
import torch
import onnx
import onnxruntime as ort

# YOLOv5 경로를 추가합니다
sys.path.append('C:/yolov5')

# 모델 로드 (CUDA로)
model_path = 'C:/myLab/Project1/Project1/python/best.pt'

# CUDA가 사용 가능한 경우, CUDA로 로드하고, 그렇지 않으면 CPU로 로드합니다
device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
try:
    model = torch.load(model_path, map_location=device, weights_only=False)['model'].float()
    model.to(device)
    model.eval()
    print("Model loaded and set to evaluation mode.")
except Exception as e:
    print("Error loading model:", str(e))

# 더미 입력 텐서 생성 (CUDA 또는 CPU에 맞게 설정)
dummy_input = torch.randn(1, 3, 640, 640).to(device)

# ONNX로 모델 내보내기
onnx_path = 'C:/myLab/Project1/Project1/python/best.onnx'
try:
    torch.onnx.export(
        model,
        dummy_input,
        onnx_path,
        verbose=True,
        opset_version=12,
        input_names=['input'],
        output_names=['output'],
        dynamic_axes={
            'input': {0: 'batch_size'},
            'output': {0: 'batch_size'}
        }
    )
    print("Model has been exported to ONNX format at", onnx_path)
except Exception as e:
    print("Error exporting model to ONNX:", str(e))

#결과
"C:\myLab\Project1\Project1\python\best.onnx" 생성완료
