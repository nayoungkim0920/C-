<IPP(Intel Integrated Performance Primitives)인텔통합성능기본요소>
고성능 연산을 위한 기본적인 요소가 인텔 프로세서의 아키텍처에 통합되어 있다
이미지 처리, 비디오 처리, 신호 처리 및 암호화와 같은 다양한 분야에서 사용된다.
SIMD(Single Instruction, Multiple Data) 명령어 집합을 활용하여 병렬 연산을 수행하므로
다중 코어 및 다중 스레드 시스템에서 최적의 성능을 제공 할 수 있다.
1)고성능 연산 : 최적화된 알고리즘과 SIMD명령어 집합을 사용하여 고성능 연산 제공
2)다양한 분야 지원 : 이미지 처리, 비디오 처리, 신호 처리 및 암호화와 같은 다양한 분야에서 사용됨
3)플랫폼 통합 : 인텔 프로세서의 아키텍처에 통합되어 있으며, 다양한 플랫폼과 운영체제를 지원
4)c/c++ 인터페이스 : c/c++로 작성되어 있으며, 다른 프로그래밍 언어에서도 사용 가능
5)컴퓨터 비전 및 영상 처리 : 주로 컴퓨터 비전 및 영상처리 분야에서 사용되며
이미지 필터링, 변환, 히스토그램 분석, 모션 검출 등의 작업을 수행할 수 있다.
-성능향상:SIMD(Single Instruction Multiple Data)최적화된 함수들을 제공하여
이미지 처리 속도를 향상시킬 수 있다. 특히 대규모 이미지나 복잡한 처리 작업에서 
성능의 차이가 두드러진다.
-최적화된 알고리즘 :이미지 처리에 필요한 다양한 알고리즘을 최적화하여 제공.
회전, 리사이징, 필터링 등의 작업에서 최적화된 함수를 사용할 수 있다.
-멀티스레딩 지원:멀티스레드 환경에서 안전하게 동작할 수 있는 함수들을 제공한다.
멀티코어 프로세서에서 병렬처리를 통해 성능을 극대화할 수 있다.
-소스코드간소화 : 코드를 간소화하고 성능을 향상시킬 수 있는 함수들을 제공받을 수 있다.
특히 OpenCV에 비해 더 직관적이고 간결한 코드를 작성할 수 있다.
-Intel 프로세서 최적화 : Intel프로세서 아키텍쳐에 최적화 되어 있어,Intel CPU를 
사용하는 환경에서 더욱 효율적으로 동작할 수 있다.
<주의점>
-상용 라이브러리이므로 라이센스 비용발생할 수 있다.
-Intel개발환경과 라이브러리 설치 필요
-반환코드(ex: ippStsNoErr)를 체크하여 오류처리를 제대로 해야한다.

이미지 처리 성능을 극대화 하고자 할때 특히 대규모 이미지나 실시간 처리가 필요한
경우 IPP를 통한 최적화는 매우 유용한 선택이 될 수 있다.

IPP설정 visual studio 2022
w_ipp_oneapi_p_2021.11.0.533_offline.exe
    프로젝트>속성>Intel Libraries for oneAPI>IPP>Default Linking Method
    C/C++>일반>추가포함디렉터리>C:\Program Files %28x86%29\Intel\oneAPI\ipp\2021.11\include
    링커>일반>추가라이브러리디렉터리>C:\Program Files %28x86%29\Intel\oneAPI\ipp\latest\lib
    링커>입력>추가종속성>
    ippimt.lib
    ippvmmt.lib
    ippsmt.lib
    ippcoremt.lib
