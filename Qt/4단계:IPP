<IPP>
IPP로 OpenCV로 이미지처리하는 부분으로 변경 하고 싶었으나
ippiRotate_8u_C3R, ippiResize_8u_C3R 함수가 ippi.h에서 대체없이 완전제거되어 
OpenCV로 구현
-인텔 통합 성능 프리미티브(인텔IPP)개발자 가이드 및 참조 
https://www.intel.com/content/www/us/en/docs/ipp/developer-guide-reference/2021-11/getrotatetransform.html
ipp_developer-guide-reference_2021.11-790148-814849.pdf

<CMake IPP설정 추가>
//CMakeLists.txt
cmake_minimum_required(VERSION 3.14)
project(Project1)

# Qt 및 OpenCV 설정
set(CMAKE_PREFIX_PATH "C:/Qt/6.7.1/msvc2019_64" "C:/opencv/sources/build")

# Qt 및 OpenCV 패키지 찾기
find_package(Qt6 REQUIRED COMPONENTS Widgets Core Gui)
find_package(OpenCV REQUIRED)

# Intel oneAPI IPP 추가
set(IPP_INCLUDE_DIR "C:/Program Files (x86)/Intel/oneAPI/ipp/2021.11/include")
set(IPP_LIB_DIR "C:/Program Files (x86)/Intel/oneAPI/ipp/2021.11/lib")

# 추가 포함 디렉터리 설정
include_directories(${IPP_INCLUDE_DIR})

# 실행 파일 추가
add_executable(Project1
    main.cpp
    MainWindow.cpp
    MainWindow.h
    MainWindow.ui
    ImageProcessor.cpp
    ImageProcessor.h
)

# Qt 및 OpenCV 라이브러리 링크
target_link_libraries(Project1
    Qt6::Widgets
    Qt6::Core
    Qt6::Gui
    ${OpenCV_LIBS}
)

# Intel oneAPI IPP 라이브러리 링크
target_link_libraries(Project1
    "${IPP_LIB_DIR}/ippimt.lib"
    "${IPP_LIB_DIR}/ippvmmt.lib"
    "${IPP_LIB_DIR}/ippsmt.lib"
    "${IPP_LIB_DIR}/ippcoremt.lib"
    "${IPP_LIB_DIR}/ippcore.lib"
    "${IPP_LIB_DIR}/ippi.lib"
    "${IPP_LIB_DIR}/ipps.lib"
    "${IPP_LIB_DIR}/ippcvmt.lib"
)

# 실행 파일 출력 디렉토리 설정
set_target_properties(Project1 PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/Debug"
    RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/Release"
)

# DLL 복사
# 디버그 빌드에서의 OpenCV opencv_world DLL 복사
add_custom_command(TARGET Project1 POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    "C:/opencv/build/x64/vc16/bin/opencv_world490d.dll" "$<TARGET_FILE_DIR:Project1>"
    COMMENT "Copying OpenCV Debug opencv_world DLL to output directory"
)

# 릴리스 빌드에서의 OpenCV opencv_world DLL 복사
add_custom_command(TARGET Project1 POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    "C:/opencv/build/x64/vc16/bin/opencv_world490.dll" "$<TARGET_FILE_DIR:Project1>"
    COMMENT "Copying OpenCV Release opencv_world DLL to output directory"
)

# 디버그 빌드에서의 OpenCV DLL 복사
add_custom_command(TARGET Project1 POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    "C:/opencv/sources/build/bin/Debug/opencv_imgcodecs490d.dll" "$<TARGET_FILE_DIR:Project1>"
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    "C:/opencv/sources/build/bin/Debug/opencv_core490d.dll" "$<TARGET_FILE_DIR:Project1>"
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    "C:/opencv/sources/build/bin/Debug/opencv_imgproc490d.dll" "$<TARGET_FILE_DIR:Project1>"
    COMMENT "Copying OpenCV Debug DLLs to output directory"
)

# 릴리스 빌드에서의 OpenCV DLL 복사
add_custom_command(TARGET Project1 POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    "C:/opencv/sources/build/bin/Release/opencv_imgcodecs490.dll" "$<TARGET_FILE_DIR:Project1>"
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    "C:/opencv/sources/build/bin/Release/opencv_core490.dll" "$<TARGET_FILE_DIR:Project1>"
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    "C:/opencv/sources/build/bin/Release/opencv_imgproc490.dll" "$<TARGET_FILE_DIR:Project1>"
    COMMENT "Copying OpenCV Release DLLs to output directory"
)


# MOC 파일 생성
qt6_wrap_cpp(MOC_FILES
    MainWindow.h
    ImageProcessor.h
)

# 생성된 MOC 파일을 소스에 추가
target_sources(Project1 PRIVATE ${MOC_FILES})

<소스>
//ImageProcessor.cpp
QFuture<bool> ImagProcessor::rotateImage(cv::Mat& image)
QFuture<bool>
비동기적인 작업의 결과를 나타내기 위함이다.
QFuture는 Qt프레임워크에서 제공하는 클래스로, 비동기 작업의 결과를 나태내는데 사용.
bool타입을 사용하는 경우, 비동기 작업이 성공했는지 또는 실패했는지를 간단히 나타내기
위해 사용될 수 잇다. 특정 조건을 만족하는지 엽를 판단하는 비동기 작업의 결과를 bool
로 표현할 수 있다.
